---
- hosts: all

  vars:
    ansible_install: false
    non_root_user_create: true
    non_root_user_id: dan

  tasks:

  - name: Disable password authentication for root.
    become: true
    lineinfile:
      path: /etc/ssh/sshd_config
      state: present
      regexp: '^#?PermitRootLogin'
      line: 'PermitRootLogin prohibit-password'

  - name: Setup passwordless sudo.
    become: true
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%sudo'
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      validate: '/usr/sbin/visudo -cf %s' 

  - name: Disallow SSH password authentication
    become: true
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
      validate: sshd -t -f %s
    notify:
      - service ssh restart

  # Might need a few tries as the network stabilizes.
  - name: Install prerequisites.
    become: true
    apt:
      pkg:
      - curl
      - git
      - patch
      - unzip
      - make
      - net-tools
      state: present
      update_cache: true
    register: apt_result
    until: apt_result is success
    retries: 3

  - name: Install a recent Ansible from PPA.
    block:

      - name: Ensure Ansible/PPA prerequisites are installed.
        become: true
        apt:
          pkg:
          - software-properties-common
          - acl
          state: present
        register: apt_result
        until: apt_result is success
        retries: 3
      
      - name: Add Ansible PPA.
        become: true
        apt_repository:
          repo: ppa:ansible/ansible
    
      - name: Install Ansible package.
        become: true
        apt:
          pkg:
          - ansible
          state: present
          update_cache: true
        register: apt_result
        until: apt_result is success
        retries: 3

    when: ansible_install


  - name: Set up non-root user.
    block:

    - name: Ensure non-root user's group exists.
      group:
        name: "{{ non_root_user_id }}"
        state: present
  
    - name: Ensure non-root user exists.
      become: true
      user:
        name: "{{ non_root_user_id }}"
        groups: "{{ non_root_user_id }}, sudo"

    - name: Copy homedir file archive.
      unarchive:
        src: "files/homedir-files.tgz"
        dest: "/home/{{ non_root_user_id }}"
      when: "'files/homedir-files.tgz' is file"

    - name: Ensure SSH dir exists for non-root user.
      file:
        path: "/home/{{ non_root_user_id }}/.ssh"
        state: directory
        mode: '0700'

    - name: Ensure SSH key exists for non-root user.
      community.crypto.openssh_keypair:
        path: "/home/{{ non_root_user_id }}/.ssh/id_ed25519"
        type: ed25519
        comment: "{{ non_root_user_id }}@{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  
    - name: Register the SSH public key in a variable.
      shell: "cat /home/{{ non_root_user_id }}/.ssh/id_ed25519.pub"
      register: ssh_pubkey_out
  
    - name: Display the SSH public key.
      debug: var=ssh_pubkey_out.stdout

    when: non_root_user_create
